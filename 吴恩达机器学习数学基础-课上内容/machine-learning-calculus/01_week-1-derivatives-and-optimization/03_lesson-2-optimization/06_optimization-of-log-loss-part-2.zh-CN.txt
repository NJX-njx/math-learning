在上一个视频中，你找到了 再次获胜的最佳硬币。 但如果你仔细观察， 我们所做的完全是机器学习。 它正在为数据集寻找最佳模型。 数据集是什么？10 次掷硬币，即七个正面 和三个反面，模型就是硬币。 该模型是一枚硬币，其正 面落在概率为 P 的正面和反面， 概率为 1 减去 p。你所做的就是 找到最 有可能与左边数据集相匹配的模型。 你是怎么找到那个模型的？ 您将对数损失降至最低，并 得出最佳 p 为 0.7。 现在的问题是，为什么对 数损失有对数？ 为什么我们不能简单地 求解一个大产品的衍生物？ 好吧，原因之一是衍生产品很难， 而衍生产品很容易。 当然，如果它是两件事的产物， 你可以使用产品规则。 但是你会为三件事、四件事， 或者很多类似的事情做什么？ 你必须迭代 产品规则，它会变得非常混乱。 这里这个函数的导数实际上就是这个公式。 这太难解决了。 如果有更简单的方法， 我们应该始终采用它， 如果我们取对数， 那么我们在这里得到这个导数； 6 大于 p 加上 2 大于 1 减去 p 等等。 这样干净多了。 我们确实得到了一些分母， 那是因为对数，因为 p 的对数 的导数是 1 比 p。但是分母要付出的代价很小， 不必计算出左边的公式。 但这不是我们使用对数的唯一原因。 我们使用对数的另一个原因是因为微 小事物的乘积很小。 想象一下，如果你的概率是 1,000 个概率的乘积。 这是 1,000 个数字的乘积，介于 0 和 1 之间。 这个数字可能非常小 ，也许计算机无法处理这么小的数字。 另一方面，如果是对数，那么 非常小的数字的对数就是 一个非常大的负数， 计算机可以处理这些数字。 简而言之，在 机器学习中，每当你 有一个非常复杂 的乘积时，都可以考虑使用对数。 它可能会大大简化它， 尤其是在你使用衍生品的情况下。