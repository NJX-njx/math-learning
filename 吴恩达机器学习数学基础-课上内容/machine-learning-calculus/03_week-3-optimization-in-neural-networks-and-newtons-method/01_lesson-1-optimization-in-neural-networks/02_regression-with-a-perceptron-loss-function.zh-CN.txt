在上一个视频中，你看到了一个数据集，里面有一堆 房屋及其价格 以及它们的大小（以平方英尺为单位）。 当时的想法是 通过这些点拟出尽可能好的线。 越过最接近此点的线 ，这将是一个很好的预测。 这里的这条线正是模型，我们需要 找到一种方法 来评估模型，看看它的表现如何， 并在此基础上，看看如何 改进它以获得更好的模型。 首先，让我们看看模型预测了什么。 该模型预测了这一专栏，怎么样？ 好吧，对应于 第一所房子的高度为15,000， 对应于第二栋房屋的高度为 30,000，对应于第一所房屋的点为45,000。 这看起来像一个相当不错的模型。 我们也许可以做得更好， 但是到目前为止，它看起来像是一个相当不错的模型， 至少你可以看到它正确地 预测了第二套房屋的价格，而且 距离第一套和第三套不远。 但是，让我们量化一下它有多远。 这样，我们需要 从实际值中减 去预测，我们将其称为错误。 这里的这些垂直虚线表明了这个错误。 显然，线越短，模型越好 ，因为这意味着预测值 接近实际值。 但是， y 减去 y-hat 有一个小问题，该点位于直线上方， 那么这是正数，如果该点在 直线下方，则为负数。 负误差和 正误差一样不好。 但是，如果我们把它们加起来，我们可以得到零或小的数字。 这可能会让人感到困惑，因此， 我们对错误进行平分。 y 减去 y-hat 平方是我们想要的实际度量。 在机器学习中，我们实际上将其乘以一半。 原因实际上更具装饰性，因为实际上， 当你取y的导数减去y帽的平方 时，你会得到一个挥之不去的二。 我们在那里放了一个 1/2 来取消那 两个然后我们要追踪的数字就更少了。 但归根结底，你可以将 零乘以任何你想要的常数 ，但最后你仍然不会改变任何东西。 现在我们有一个预测函数，它 输出一些预测 y，由这个公式给出。 我们要调用 L 的损失函数， 每个点是 1/2 乘以 1 减去 y 帽的平方。 这是预测值与 值平方乘以一半之间的距离， 我们要称之为 Y 的 L，y-hat。 我们现在的目标是尽量减少这种情况。 要找到 w_1、 w_2 和 b，则 可以得出误差最小的 y-hat。 在上周， 你学到了很多关于最小化函数的知识， 包括梯度下降等方法。 你可以想象，这就是我们接下来要用的。 我们将使用梯度下降来最小化 L（ 损失），从而找到最佳的 w_1、 w_2 和 b。 这意味着我们找到了数据集的最佳模型。