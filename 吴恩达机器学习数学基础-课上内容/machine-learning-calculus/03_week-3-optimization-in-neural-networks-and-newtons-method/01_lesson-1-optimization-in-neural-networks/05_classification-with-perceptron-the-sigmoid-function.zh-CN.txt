在上一个视频中，你学习了 sigmoid 函数以及 它在机器学习中如何非常有用， 原因是因为它取 整条数字线然后 进入间隔零 、一，这是我们想要的输出。 公式为 1/1 加上 e^减去 z。 这是图表。 这里的图表就是这张图。 请注意，输入 是数字线 ，输出是间隔零，一。 输入是水平轴 ，输出是垂直轴。 请注意，它在零和一处有渐近线， 这意味着它从来没有真正触及 数字零和一，但是 每个数字的输出都严格 介于零和一之间，例如，零的 sigmoid是1/2， 因为如果你插入一个零和1/1加上e^减去0，你会 得到 1/1 加上 1，也就是 1/2。 如果一个数字是非常大的正数，比如 1,000， 那么 1,000 的 sigmoid 非常接近 1。 如果它是一个非常大的负数，比如负 1,000， 那么负 1,000 的 sigmoid 就非常接近于零。 但是，sigmoid 函数 有一个非常好的特性，唯一 的不同是它将 整条数线缩成区间 0、 1，而且它的导数非常好。 现在我们要计算导数。 为什么它是一个不错的衍生品很重要？ 因为在机器学习中， 我们将经常使用导数。 我们的函数必须易于区分，这一点非常重要。 让我们详细介绍一下衍生物。 z 的 Sigmoid 是 1/1 加上 e^负 z， 可以这样写，1 加 e^负 z^ 负 1。 现在我们要从中得出这个的导数。 我们将使用连锁规则。 对于链式规则，我们有 某物的 d/dz 到减去 1 乘以 减去 1 乘以减去 2。 然后我们取里面东西的导数， 这正是连锁法则。 让我们把它重写为负 1， 1 加 e^负 z 到负 2 次， 现在，1 的 d/dz 加上 e^负 z 是 1 的 d/dz 加上 e^负 z 的 d/dz 加上 e^负 z 的 d/dz。它 将被重写为零， 因为 常数为 1 的导数为零， 这里我们有 e^负 z 的导数，即负 z 乘以 e^负 z 的导数连锁规则，最后一 部分将是负一。 我们差不多已经走了一半了。 请注意，这个负数 会被这个负数抵消， 我们有 1 加 e^negation z^negale 2 乘以 e^n egation z，就是这样。 现在可以改写得更好了。 让我们把它写成 e^负 z 大于 1 再加上 e^负 z 平方。 这就是我们的现状。 现在，请注意，我们可以加减一个。 为什么我们要加减一个？ 你会明白的，但让我们这样写吧。 现在让我们把它拆分为分母上的第一个 1 加 e^负 z ，在分母上减去 1。 现在用这两个中的一个取消了，我们得到 1/1 加上 e^负 z 减去 1/1 加上 e^ 负 z 平方。 这可以写成 这个减去 1/1 加上 e^负 z 乘以本身。 现在我们要将 1/1 加 e^负 z 乘以 1 减去 1/1 加上 e^负 z。 我们为什么要这样做？ 好吧，回想一下，这正是 sigmoid。 第一个项是 sigmoid， 第二个项是 1 减去 sigmoid。那不是很漂亮吗？sigmoid 的导数为 sigmoid 乘以 1 减去 sigmoid。 这种导数非常容易 计算，这意味着它 在机器学习中将非常有用。